name: Build WearOS App
on:
  push:
    paths:
      - 'android-wearos/**'
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # 최신 커밋만 가져오기 (전체 history 불필요)

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      # Gradle 캐싱 추가
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android-wearos/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('android-wearos/**/*.gradle*', 'android-wearos/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew
        working-directory: android-wearos

      - name: Setup keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android-wearos/silentbull-release-key.keystore

      # 불필요한 디버깅 단계들 제거하고 릴리즈 빌드만 실행
      - name: Build Signed Release APK
        run: |
          ./gradlew clean :app:assembleRelease --no-daemon --parallel --build-cache
        working-directory: android-wearos
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2048m -Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true"

      # APK 확인 (간소화)
      - name: Verify APK exists
        run: |
          if [ ! -f app/build/outputs/apk/release/app-release.apk ]; then
            echo "❌ Release APK not found"
            ls -la app/build/outputs/apk/release/ || echo "Release directory not found"
            exit 1
          fi
          echo "✅ Release APK found"
          ls -lh app/build/outputs/apk/release/app-release.apk
        working-directory: android-wearos

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: SilentBull-WearOS-Release-APK
          path: android-wearos/app/build/outputs/apk/release/app-release.apk
          retention-days: 30

      # Firebase 배포 단계들을 병렬로 준비
      - name: Setup Firebase deployment
        run: |
          # Service account 파일 생성
          echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}' > ./service-account-key.json
          # Firebase CLI 설치
          npm install -g firebase-tools
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./service-account-key.json

      - name: Deploy to Firebase App Distribution
        run: |
          firebase appdistribution:distribute \
            android-wearos/app/build/outputs/apk/release/app-release.apk \
            --app "${{ secrets.FIREBASE_APP_ID }}" \
            --groups "wear-os-testers" \
            --release-notes-file ./release-notes.txt \
            --project "${{ secrets.FIREBASE_PROJECT_ID }}"
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./service-account-key.json

      - name: Deployment result
        run: |
          if [ $? -eq 0 ]; then
            echo "✅ APK가 성공적으로 Firebase App Distribution에 배포되었습니다!"
          else
            echo "❌ APK 배포에 실패했습니다."
            exit 1
          fi
