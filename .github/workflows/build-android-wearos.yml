name: Build Wear OS App

on: 
  push: 
    paths: 
      - 'android-wearos/**'
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew
        working-directory: android-wearos

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper

      - name: Setup keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android-wearos/silentbull-release-key.keystore


      - name: Build Signed Release APK
        run: ./gradlew :app:assembleRelease
        working-directory: android-wearos
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Build Debug APK (fallback)
        if: failure()
        run: ./gradlew :app:assembleDebug
        working-directory: android-wearos

      - name: List APK files1
        run: find android-wearos/app/build/outputs/apk -name "*.apk" -type f

      - name: List APK files2
        run: find android-wearos/app -name "*.apk" -type f

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: SilentBull-WearOS-Release-APK
          path: android-wearos/app/build/outputs/apk/release/app-release-signed.apk
          retention-days: 30

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Create Service Account File
        run: echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}' > ./service-account-key.json

      - name: Deploy to Firebase App Distribution
        run: |
          firebase appdistribution:distribute \
            android-wearos/app/build/outputs/apk/release/app-release-signed.apk \
            --app "${{ secrets.FIREBASE_APP_ID }}" \
            --groups "wear-os-testers" \
            --release-notes-file ./release-notes.txt \
            --project "${{ secrets.FIREBASE_PROJECT_ID }}"
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./service-account-key.json

      - name: Notify deployment success
        if: success()
        run: |
          echo "✅ APK가 성공적으로 Firebase App Distribution에 배포되었습니다!"
          echo "테스터들이 이메일로 알림을 받게 됩니다."

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "❌ APK 배포에 실패했습니다."
          echo "로그를 확인해주세요."
